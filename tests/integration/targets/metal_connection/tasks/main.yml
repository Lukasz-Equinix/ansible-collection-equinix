- name: metal_connection
  module_defaults:
    equinix.cloud.metal_connection:
      metal_api_token: '{{ metal_api_token }}'
    equinix.cloud.metal_connection_info:
      metal_api_token: '{{ metal_api_token }}'
    equinix.cloud.metal_device:
      metal_api_token: '{{ metal_api_token }}'
    equinix.cloud.metal_project:
      metal_api_token: '{{ metal_api_token }}'
    equinix.cloud.metal_project_info:
      metal_api_token: '{{ metal_api_token }}'
    equinix.cloud.metal_vlan:
      metal_api_token: '{{ metal_api_token }}'
    equinix.cloud.metal_vlan_info:
      metal_api_token: '{{ metal_api_token }}'
  block:
    - set_fact:
        test_resource_name_prefix: 'ansible-integration-test-connection'
    - set_fact:
        unique_id: "{{ lookup('community.general.random_string', upper=false, numbers=false, special=false) }}"
    - set_fact:
        test_prefix: "{{ test_resource_name_prefix }}-{{ unique_id }}"
    - set_fact:
        test_vxlan1: 123
    - set_fact:
        test_vxlan2: 456
    - set_fact:
        test_metro: 'am'
    - set_fact:
        test_description: 'My new VLAN'
    - set_fact:
        test_name: "{{ test_prefix }}-TestConn"
    - set_fact:
        test_redundancy: 'primary'
    - set_fact:
        test_speed: '50Mbps'
    - set_fact:
        test_type_dedicated: 'dedicated'
    - set_fact:
        test_mode_standard: 'standard'
    - set_fact:
        test_service_token_type: 'a_side'

    - name: create project for test
      equinix.cloud.metal_project:
        name: "{{ test_prefix }}-project"
      register: project

    - name: create first vlan for test
      equinix.cloud.metal_vlan:
        project_id: "{{ project.id }}"
        metro: "{{ test_metro }}"
        vxlan: "{{ test_vxlan1 }}"
      register: first_vlan

    - name: create second vlan for test
      equinix.cloud.metal_vlan:
        project_id: "{{ project.id }}"
        metro: "{{ test_metro }}"
        vxlan: "{{ test_vxlan2 }}"
      register: second_vlan

    - name: create connection for test
      equinix.cloud.metal_connection:
        project_id: "{{ project.id }}"
        metro: "{{ test_metro }}"
        description: "{{ test_description }}"
        type: "{{ test_type_dedicated }}"
        name: "{{ test_name }}"
        speed: "{{ test_speed }}"
        redundancy: "{{ test_redundancy }}"
      register: test_connection

    - name: create same connection to test indepotence
      equinix.cloud.metal_connection:
        project_id: "{{ project.id }}"
        metro: "{{ test_metro }}"
        description: "{{ test_description }}"
        type: "{{ test_type_dedicated }}"
        name: "{{ test_name }}"
        speed: "{{ test_speed }}"
        redundancy: "{{ test_redundancy }}"

    - name: fetch existing connection
      equinix.cloud.metal_connection:
        project_id: "{{ project.id }}"
        name: "{{ test_connection.name }}"
      register: test_connection_fetched

    - name: fetch existing connection using id
      equinix.cloud.metal_connection:
        project_id: "{{ project.id }}"
        id: "{{ test_connection.id }}"
      register: test_connection_fetched_with_id

    - assert:
        that:
          - test_connection.name == test_name
          - test_connection.id == test_connection_fetched.id
          - test_connection.id == test_connection_fetched_with_id.id

    - name: list test connections
      equinix.cloud.metal_connection_info:
        project_id: "{{ project.id }}"
      register: test_connections_list

    - assert:
        that:
          - "test_connections_list.resources | length >= 1"
          - "test_connection.id in test_connections_list.resources | map(attribute='id') | list"

    - name: delete connection
      equinix.cloud.metal_connection:
        project_id: "{{ project.id }}"
        name: "{{ test_name }}"
        connection_id: "{{ test_connection.id }}"
        state: absent

    - name: delete connection again to check idempotence
      equinix.cloud.metal_connection:
        project_id: "{{ project.id }}"
        name: "{{ test_name }}"
        connection_id: "{{ test_connection.id }}"
        state: absent

  always:
    - name: Announce teardown start
      debug:
        msg: "***** TESTING COMPLETE. COMMENCE TEARDOWN *****"

    - name: list vlans
      equinix.cloud.metal_vlan_info:
        project_id: "{{ project.id }}"
      register: vlan_info_listed

    - name: delete vlans
      equinix.cloud.metal_vlan:
        id: "{{ item.id }}"
        state: absent
      loop: "{{ vlan_info_listed.resources }}"
      ignore_errors: yes

    - name: list test projects
      equinix.cloud.metal_project_info:
        name: "{{ test_prefix }}"
      register: test_projects_listed

    - name: delete test projects
      equinix.cloud.metal_project:
        id: "{{ item.id }}"
        state: absent
      loop: "{{ test_projects_listed.resources }}"
      ignore_errors: yes